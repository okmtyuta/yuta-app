---
import { getCollection, type CollectionEntry } from 'astro:content'
import Layout from '../../layouts/Layout.astro'
import { getPostThumbnail } from '../../shared/get-post-thumbnail'

export async function getStaticPaths() {
  const posts = await getCollection('posts')

  return posts.map((post) => {
    const { previous, next } = post.data
    const previous_post = posts.find((post) => post.slug == previous)
    const next_post = posts.find((post) => post.slug == next)
    const seriePosts = post.data.serie
      ? posts.filter((p) => {
          return post.data.serie === p && post.slug !== p.slug
        })
      : []

    return {
      params: {
        slug: post.slug
      },
      props: { post, previous_post, next_post, seriePosts }
    }
  })
}

type Props = {
  post: CollectionEntry<'posts'>
  previous_post: CollectionEntry<'posts'>
  next_post: CollectionEntry<'posts'>
  seriePosts: CollectionEntry<'posts'>[]
}
const { post, previous_post, next_post, seriePosts } = Astro.props

const thumbnail = getPostThumbnail(post.slug, post.data.genre, null)


const thumbnail_src = (await thumbnail()).default.src

const { Content } = await post.render()
---

<Layout
  title={post.data.title}
  description={post.data.description}
  og={{
    image: `https://note.yuta.app/${thumbnail_src}`
  }}
>
  <h1>{post.data.title}</h1>
  <h6>{post.data.date.toISOString().slice(0, 10)}</h6>

  {
    post.data.serie && (
      <div class="series">
        <span>Series</span>
        <span>
          <a href={`/posts/series/${post.data.serie}`}>{post.data.serie}</a>
        </span>
      </div>
    )
  }

  {
    post.data.genre && (
      <div class="genre">
        <span>Genre</span>
        <span>
          <a href={`/posts/genre/${post.data.genre}`}>{post.data.genre}</a>
        </span>
      </div>
    )
  }

  <Content />
  <div class="navigation">
    {
      previous_post && (
        <div>
          <a href={previous_post.slug}>{previous_post.data.title}</a>
        </div>
      )
    }
    {
      next_post && (
        <div>
          <a href={next_post.slug}>{next_post.data.title}</a>
        </div>
      )
    }
  </div>

  {
    seriePosts.length > 0 && (
      <>
        <h6>Series</h6>
        <ul>
          {seriePosts.map((post) => {
            return (
              <li>
                <a href={`/posts/${post.slug}`}>{post.data.title}</a>
              </li>
            )
          })}
        </ul>
      </>
    )
  }
</Layout>

<style>
  .navigation {
    margin-top: 48px;
    display: flex;
    justify-content: space-between;
  }
  .series,
  .genre {
    display: flex;
    gap: 10px;
  }
</style>
